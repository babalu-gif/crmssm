package com.example.crm.workbench.mapper;

import com.example.crm.workbench.entity.ClueActivityRelation;

import java.util.List;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Mon Mar 28 19:10:30 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Mon Mar 28 19:10:30 CST 2022
     */
    int insert(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Mon Mar 28 19:10:30 CST 2022
     */
    int insertSelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Mon Mar 28 19:10:30 CST 2022
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Mon Mar 28 19:10:30 CST 2022
     */
    int updateByPrimaryKeySelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Mon Mar 28 19:10:30 CST 2022
     */
    int updateByPrimaryKey(ClueActivityRelation record);

    /**
     * 批量保存市场活动和线索的关联关系
     * @param list
     * @return
     */
   int insertClueActivityRelationByList(List<ClueActivityRelation> list);

    /**
     * 根据activityId和clueId删除市场活动和线索的关联
     * @return
     */
   int deleteClueActivityRelationByClueIdActivityId(ClueActivityRelation relation);

    /**
     * 根据clueId查询所属的activityId
     * @param clueId
     * @return
     */
   List<ClueActivityRelation> selectActivityIdByClueId(String clueId);

    /**
     * 根据clueId删除线索与市场活动的关联关系
     * @param clueId
     * @return
     */
   int deleteClueActivityRelationByClueId(String clueId);
}