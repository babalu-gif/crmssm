package com.example.crm.workbench.mapper;

import com.example.crm.workbench.entity.ContactsActivityRelation;

import java.util.List;

public interface ContactsActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_activity_relation
     *
     * @mbg.generated Thu Mar 31 10:50:24 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_activity_relation
     *
     * @mbg.generated Thu Mar 31 10:50:24 CST 2022
     */
    int insert(ContactsActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_activity_relation
     *
     * @mbg.generated Thu Mar 31 10:50:24 CST 2022
     */
    int insertSelective(ContactsActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_activity_relation
     *
     * @mbg.generated Thu Mar 31 10:50:24 CST 2022
     */
    ContactsActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_activity_relation
     *
     * @mbg.generated Thu Mar 31 10:50:24 CST 2022
     */
    int updateByPrimaryKeySelective(ContactsActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_activity_relation
     *
     * @mbg.generated Thu Mar 31 10:50:24 CST 2022
     */
    int updateByPrimaryKey(ContactsActivityRelation record);

    /**
     * 批量插入联系人
     * @param clueActivityRelations
     * @return
     */
    int insertContactsActivityRelationByList(List<ContactsActivityRelation> clueActivityRelations);

    /**
     * 根据id删除联系人和市场活动的关系
     * @param ids
     * @return
     */
    int deleteContactsActivityRelationByIds(String[] ids);

    /**
     * 根据contactsId和activityId删除活动和联系人的关联
     * @param relation
     * @return
     */
    int deleteContactsActivityRelationByContactsIdActivityId(ContactsActivityRelation relation);

    /**
     * 根据list批量插入
     * @param relationList
     * @return
     */
    int saveCreateContactsActivityRelationByList(List<ContactsActivityRelation> relationList);
}